{"version":3,"sources":["webpack:///path---posts-gatsby-starter-lumen으로-블로그-생성하기-d90642d7851b4233f300.js","webpack:///./.cache/json/posts-gatsby-starter-lumen으로-블로그-생성하기.json"],"names":["webpackJsonp","422","module","exports","data","site","siteMetadata","title","subtitle","author","name","github","disqusShortname","url","markdownRemark","id","html","fields","slug","tagSlugs","frontmatter","tags","date","description","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,cAAAC,SAAA,gCAAAC,QAA2EC,KAAA,QAAAC,OAAA,SAAgCC,gBAAA,QAAAC,IAAA,4BAA4DC,gBAAmBC,GAAA,2GAAAC,KAAA,0iRAA20QC,QAA2iBC,KAAA,0CAAAC,UAAA,kDAA8GC,aAAgBb,MAAA,kCAAAc,MAAA,4BAAAC,KAAA,2BAAAC,YAAA,mJAAgRC,aAAgBN,KAAA","file":"path---posts-gatsby-starter-lumen으로-블로그-생성하기-d90642d7851b4233f300.js","sourcesContent":["webpackJsonp([114136929382123],{\n\n/***/ 422:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"kujyp 개발블로그\",\"subtitle\":\"ML DevOps, Python, Docker ...\",\"author\":{\"name\":\"kujyp\",\"github\":\"kujyp\"},\"disqusShortname\":\"kujyp\",\"url\":\"https://kujyp.github.io\"}},\"markdownRemark\":{\"id\":\"/home/circleci/app/src/pages/posts/gatsby-starter-lumen으로-블로그-생성하기.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>TL;DR</h3>\\n<p>React를 사용하는 정적 페이지 생성 툴 <a href=\\\"https://www.gatsbyjs.org/\\\">gatsby</a>를 활용해 개발블로그를 만들어 보았다.\\n<a href=\\\"https://github.com/alxshelepenok/gatsby-starter-lumen\\\">lumen starter</a>를 활용해 css, plugin가 미리 세팅된 환경에서 작업을 시작했고,\\ngithub pages를 이용해 생성된 정적페이지를 호스팅했다.</p>\\n<h3>들어가며</h3>\\n<p>2019년을 맞이해서 2018년 회고도 할겸, 미루기만 해왔던 개발블로그를 제작을 해보았다.\\n개발을 쭉 해오면서 정리해놓은 자료들이 아깝기도하고, 이대로 고생했던 경험을 잊어버릴까봐 걱정되는 마음이 있어서 언젠가는 개발블로그를 만들어보자는 생각을 갖고있었다.\\n그 과정에서 겪은 내용들을 개발블로그 첫 포스팅으로 올려본다.</p>\\n<h3>블로그 서비스 선택</h3>\\n<p>제일 먼저 고려했던것은 <code class=\\\"language-text\\\">직접 개발하기</code> 였다.\\n욕심이 많아서 중간중간에 블로그에 넣고싶은 기능들이 계속 생겨날텐데, 그것을 감당하려면 아무래도 직접개발이 가장 좋지 않나 생각했다.</p>\\n<p>하지만 올해 6월 해커톤에서 만들었던 <a href=\\\"https://github.com/OrangeTen/TodayILearned\\\">tilup</a> 서비스를 유지하는 과정에서, 직접 호스팅하는 작업이 생각보다 손이 많이간다는것을 느꼈다.\\n호스팅에서 꾸준하게 생기는 이슈(dockerize한 이미지를 dockerhub에 배포 했더니 AWS traffic으로 과금이 일어나지를 않나, VM의 용량이 부족해서 주기적으로 docker image prune을 해줘야하질 않나)를 본업이 있는 와중에 해결하다보니,\\n간단한 이슈임에도 꽤 오랜기간이 서비스가 중단된채로 방치되고, 이런 이슈가 반복되다보니 서서히 끈기를 잃어가는것을 느꼈다. </p>\\n<p>그래서 이번 블로그에서 가장 중점적으로 본것은 <code class=\\\"language-text\\\">유지보수가 편한것</code>이다. 유지보수가 편하려면,</p>\\n<ol>\\n<li>호스팅을 직접하지 않는 서비스</li>\\n<li>유명한 서비스</li>\\n<li>평소 사용하던 언어 등을 사용하는 서비스여야했다.</li>\\n</ol>\\n<p>이 조건을 모두 만족하는 서비스를 찾다보니, <a href=\\\"https://pages.github.com/\\\">github pages</a>+<a href=\\\"https://www.gatsbyjs.org/\\\">gatsby</a>를 찾게되었다.\\n호스팅을 <a href=\\\"https://pages.github.com/\\\">github pages</a>로 대신해주고, 유명하고(github star 3만개), 평소사용하던 markdown, nodejs/React 를 사용하는 서비스였다.\\n<img width=\\\"1100\\\" alt=\\\"gatsby_star\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585873-de495400-7528-11e9-8806-0625d52d1d48.png\\\"></p>\\n<p><a href=\\\"https://pages.github.com/\\\">github pages</a>+<a href=\\\"https://jekyllrb.com/\\\">jekyll</a>, <a href=\\\"https://medium.com\\\">medium</a>, <a href=\\\"https://wordpress.com/\\\">가입형 wordpress</a> 들도 고려해보았지만,\\nReact의 생태계를 모두 사용할 수 있다는 말에 넘어가서 gatsby를 사용하기로 결정했다.  </p>\\n<h3>설치 과정</h3>\\n<ul>\\n<li>\\n<p>이 가이드는 <a href=\\\"https://github.com/alxshelepenok/gatsby-starter-lumen\\\">gatsby-starter-lumen</a>을 사용한다.</p>\\n</li>\\n<li>\\n<p>gatsby-cli 설치, starter를 이용해 블로그 프로젝트 생성(yarn 대신 npm을 사용해도 무관.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">mkdir</span> blog <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token builtin class-name\\\">cd</span> blog\\n<span class=\\\"token function\\\">yarn</span> global <span class=\\\"token function\\\">add</span> gatsby-cli\\ngatsby new kujyp https://github.com/alxshelepenok/gatsby-starter-lumen\\n<span class=\\\"token builtin class-name\\\">cd</span> kujyp</code></pre>\\n      </div>\\n</li>\\n<li>\\n<p>github pages 세팅</p>\\n<ul>\\n<li>username.github.io repo를 생성(<a href=\\\"https://github.com/kujyp/kujyp.github.io\\\">https://github.com/kujyp/kujyp.github.io</a>)</li>\\n<li>\\n<p>development branch에 stareter code를 push.(master는 build 결과물을 올려야한다.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">git</span> init\\n<span class=\\\"token function\\\">git</span> checkout -b development\\n<span class=\\\"token function\\\">git</span> <span class=\\\"token function\\\">add</span> <span class=\\\"token builtin class-name\\\">.</span>\\n<span class=\\\"token function\\\">git</span> commit -m <span class=\\\"token string\\\">\\\"init with starter\\\"</span>\\n<span class=\\\"token function\\\">git</span> remote <span class=\\\"token function\\\">add</span> origin https://github.com/kujyp/kujyp.github.io.git\\n<span class=\\\"token function\\\">git</span> push -u origin development</code></pre>\\n      </div>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>starter config 변경</p>\\n<ul>\\n<li>gatsby-config.js 에서 siteMetadata 를 수정한다.</li>\\n<li>disqusShortname 은 아래의 가이드대로 추가한다.</li>\\n<li>contact page 는 삭제했다.</li>\\n</ul>\\n</li>\\n<li>\\n<p>github pages 배포</p>\\n<ul>\\n<li>package.json 에서 deploy 명령어를 변경한다.<br/>\\n<code class=\\\"language-text\\\">gh-pages -d public -b master</code>\\n<img width=\\\"993\\\" alt=\\\"packagejson_deploy\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585875-de495400-7528-11e9-8467-3387420f1e64.png\\\"></li>\\n<li>\\n<p>deploy를 실행한다. 30초정도 소요된다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">yarn</span> run deploy</code></pre>\\n      </div>\\n<img width=\\\"646\\\" alt=\\\"yarn_deploy\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585878-dee1ea80-7528-11e9-9585-bdb5982fffa1.png\\\">\\n<img width=\\\"663\\\" alt=\\\"yarn_deploy2\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585879-df7a8100-7528-11e9-8142-5b57ac0864ae.png\\\">\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>개발모드(hot reloading 기능이 지원되서 파일을 수정하면 localhost 페이지에 바로 반영된다.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">gatsby develop</code></pre>\\n      </div>\\n<img width=\\\"1390\\\" alt=\\\"develop\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585863-dd182700-7528-11e9-9055-151aac35fa6d.png\\\">\\n</li>\\n</ul>\\n<h3>disqus 추가하기</h3>\\n<ul>\\n<li>\\n<p><a href=\\\"https://disqus.com\\\">https://disqus.com</a> 에 접속해서 사이트를 추가한다. disqusShortname 을 받아와야한다.</p>\\n</li>\\n<li>\\n<p>get started 클릭\\n<img width=\\\"1131\\\" alt=\\\"disqus_getstarted_1\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585867-dd182700-7528-11e9-8ca8-33d0f2d03b62.png\\\"></p>\\n</li>\\n<li>\\n<p>I want to install Disqus on my site 클릭\\n<img width=\\\"571\\\" alt=\\\"disqus_install_2\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585868-ddb0bd80-7528-11e9-8fb7-e2b021f95fff.png\\\"></p>\\n</li>\\n<li>\\n<p>website name 입력, category 선택\\n<img width=\\\"767\\\" alt=\\\"disqus_create_3\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585865-dd182700-7528-11e9-92ff-4ee3d327e52f.png\\\"></p>\\n</li>\\n<li>\\n<p>basic plan 선택(무료)\\n<img width=\\\"936\\\" alt=\\\"disqus_setup_plan_4\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585870-ddb0bd80-7528-11e9-80d0-257b2a2973aa.png\\\"></p>\\n</li>\\n<li>\\n<p>지킬 등 site generator 어느 것 사용했냐고 물어보는데, 맨 하단 <code class=\\\"language-text\\\">I dont's see my platform ~</code> 선택\\n<img width=\\\"1093\\\" alt=\\\"disqus_setup_type_5\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585871-ddb0bd80-7528-11e9-9e44-0bd489a388ff.png\\\"></p>\\n</li>\\n<li>\\n<p>website URL 입력, Complete Setup 클릭\\n<img width=\\\"1108\\\" alt=\\\"disqus_setup_6\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585869-ddb0bd80-7528-11e9-9fd1-5fee68146b71.png\\\"></p>\\n</li>\\n<li>\\n<p>이제 사이트 추가는 완료되었다.<br/>\\nadmin 페이지에서 settings - general 선택, shortname을 받아온다. <br/>\\n위의 프로젝트에서 gatsby-config.js disqusShortname 필드를 수정해준다.\\n<img width=\\\"1085\\\" alt=\\\"disqus_site_general_shortname_7\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585872-de495400-7528-11e9-8172-2914a13b66dd.png\\\"></p>\\n</li>\\n<li>\\n<p>댓글기능 추가 완료\\n<img width=\\\"450\\\" alt=\\\"disqus_complete\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585864-dd182700-7528-11e9-895c-a96375a02878.png\\\"></p>\\n</li>\\n</ul>\\n<h3>글 posting</h3>\\n<p>이제 마지막으로 블로그 글을 포스팅하는 작업만 진행하면 된다.</p>\\n<ul>\\n<li>starter에 포함되어있는 형식대로 src/pages/articles 에 폴더를 하나 생성한다.</li>\\n<li>필요한 사진파일은 폴더내부에 같이 포함시켜준다.<br/>\\n(사용할때는 <code class=\\\"language-text\\\">![description](./filename)</code> 으로 사용하면된다.</li>\\n<li>markdown파일 맨 위에 frontmatter를 추가해준다.<br/>\\nstarter에 있는 형식그대로 가져와서 title, date, layout 등등을 추가해주었다.</li>\\n<li>아래에 글내용을 markdown 형식으로 작성하면 완성.<br>\\n<img width=\\\"918\\\" alt=\\\"posting\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585877-dee1ea80-7528-11e9-98ea-16c54f6f8131.png\\\"></li>\\n<li>글 작성은 <code class=\\\"language-text\\\">yarn run develop</code> 커맨드를 통해 localhost:8000 에서 결과물을 확인하면서 진행하였다.\\n<img width=\\\"1370\\\" alt=\\\"posting_develop\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585876-dee1ea80-7528-11e9-8e88-c7ef5a135b46.png\\\"></li>\\n<li>마지막으로 development branch에 수정내용을 commit, push해주고, master branch에 deploy를 진행한다.<br/>\\n<code class=\\\"language-text\\\">$ yarn run deploy</code>\\n<img width=\\\"663\\\" alt=\\\"yarn_deploy2\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585879-df7a8100-7528-11e9-8142-5b57ac0864ae.png\\\"></li>\\n</ul>\\n<h3>마치며</h3>\\n<p>gatsby를 활용하여, 인생 처음으로 기술블로그를 생성, 포스팅을 진행해보았다.<br/>\\n글쓰는게 생각보다… 쉽지않다.<br/>\\n1월 2일부터 쓰기시작해서 2일에 걸쳐 쓴것같은데, 다음글부터는 되도록 한호흡만에 글을 끝내도록 노력 해봐야겠다. 1편 2편으로 나눠야하나..</p>\\n<p>아 그리고 markdown 한줄만 띄우는방법을 몰라서<code class=\\\"language-text\\\">&lt;br/></code> 태그를 줄마다 붙이고있는데, 너무 불편하다.<br/>\\ngithub wiki에서도 이랬는데, github issue에서는 안그러고 완전 중구난방이다.(더 쉬운 방법 아시는분은 알려주세요…ㅜㅜ)</p>\\n<p>아무튼 이번글은 여기까지 마치고, 다음 글에서는 시간이 허락한다면 circleci를 활용해 deploy과정 자동화를 진행해봐야겠다.</p>\\n<h3>도움을 받았던 링크들</h3>\\n<ul>\\n<li><a href=\\\"https://adhrinae.github.io/posts/creating-new-blog-with-gatsby\\\">Gatsby를 활용한 블로그 재구성 - adhrinae님</a></li>\\n<li><a href=\\\"https://blog.shik.kr/migrate-to-gatsby/\\\">Jekyll에서 Gatsby로 - shik님</a></li>\\n<li><a href=\\\"https://heechan.me\\\">heechan님 블로그</a>(UI가 깔끔해서 이분이 사용한 starter를 사용했다.)</li>\\n</ul>\",\"fields\":{\"slug\":\"/posts/gatsby-starter-lumen으로-블로그-생성하기/\",\"tagSlugs\":[\"/tags/hosting/\",\"/tags/react/\",\"/tags/nodejs/\"]},\"frontmatter\":{\"title\":\"gatsby starter lumen으로 블로그 생성하기\",\"tags\":[\"hosting\",\"react\",\"nodejs\"],\"date\":\"2019-01-03T04:00:00.169Z\",\"description\":\"React를 사용하는 정적 페이지 생성 툴 gatsby를 활용해 개발블로그를 만들어 보았다. lumen starter를 활용해 css, plugin가 미리 세팅된 환경에서 작업을 시작했고, github pages를 이용해 생성된 정적페이지를 호스팅했다.\"}}},\"pathContext\":{\"slug\":\"/posts/gatsby-starter-lumen으로-블로그-생성하기/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-gatsby-starter-lumen으로-블로그-생성하기-d90642d7851b4233f300.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"kujyp 개발블로그\",\"subtitle\":\"ML DevOps, Python, Docker ...\",\"author\":{\"name\":\"kujyp\",\"github\":\"kujyp\"},\"disqusShortname\":\"kujyp\",\"url\":\"https://kujyp.github.io\"}},\"markdownRemark\":{\"id\":\"/home/circleci/app/src/pages/posts/gatsby-starter-lumen으로-블로그-생성하기.md absPath of file >>> MarkdownRemark\",\"html\":\"<h3>TL;DR</h3>\\n<p>React를 사용하는 정적 페이지 생성 툴 <a href=\\\"https://www.gatsbyjs.org/\\\">gatsby</a>를 활용해 개발블로그를 만들어 보았다.\\n<a href=\\\"https://github.com/alxshelepenok/gatsby-starter-lumen\\\">lumen starter</a>를 활용해 css, plugin가 미리 세팅된 환경에서 작업을 시작했고,\\ngithub pages를 이용해 생성된 정적페이지를 호스팅했다.</p>\\n<h3>들어가며</h3>\\n<p>2019년을 맞이해서 2018년 회고도 할겸, 미루기만 해왔던 개발블로그를 제작을 해보았다.\\n개발을 쭉 해오면서 정리해놓은 자료들이 아깝기도하고, 이대로 고생했던 경험을 잊어버릴까봐 걱정되는 마음이 있어서 언젠가는 개발블로그를 만들어보자는 생각을 갖고있었다.\\n그 과정에서 겪은 내용들을 개발블로그 첫 포스팅으로 올려본다.</p>\\n<h3>블로그 서비스 선택</h3>\\n<p>제일 먼저 고려했던것은 <code class=\\\"language-text\\\">직접 개발하기</code> 였다.\\n욕심이 많아서 중간중간에 블로그에 넣고싶은 기능들이 계속 생겨날텐데, 그것을 감당하려면 아무래도 직접개발이 가장 좋지 않나 생각했다.</p>\\n<p>하지만 올해 6월 해커톤에서 만들었던 <a href=\\\"https://github.com/OrangeTen/TodayILearned\\\">tilup</a> 서비스를 유지하는 과정에서, 직접 호스팅하는 작업이 생각보다 손이 많이간다는것을 느꼈다.\\n호스팅에서 꾸준하게 생기는 이슈(dockerize한 이미지를 dockerhub에 배포 했더니 AWS traffic으로 과금이 일어나지를 않나, VM의 용량이 부족해서 주기적으로 docker image prune을 해줘야하질 않나)를 본업이 있는 와중에 해결하다보니,\\n간단한 이슈임에도 꽤 오랜기간이 서비스가 중단된채로 방치되고, 이런 이슈가 반복되다보니 서서히 끈기를 잃어가는것을 느꼈다. </p>\\n<p>그래서 이번 블로그에서 가장 중점적으로 본것은 <code class=\\\"language-text\\\">유지보수가 편한것</code>이다. 유지보수가 편하려면,</p>\\n<ol>\\n<li>호스팅을 직접하지 않는 서비스</li>\\n<li>유명한 서비스</li>\\n<li>평소 사용하던 언어 등을 사용하는 서비스여야했다.</li>\\n</ol>\\n<p>이 조건을 모두 만족하는 서비스를 찾다보니, <a href=\\\"https://pages.github.com/\\\">github pages</a>+<a href=\\\"https://www.gatsbyjs.org/\\\">gatsby</a>를 찾게되었다.\\n호스팅을 <a href=\\\"https://pages.github.com/\\\">github pages</a>로 대신해주고, 유명하고(github star 3만개), 평소사용하던 markdown, nodejs/React 를 사용하는 서비스였다.\\n<img width=\\\"1100\\\" alt=\\\"gatsby_star\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585873-de495400-7528-11e9-8806-0625d52d1d48.png\\\"></p>\\n<p><a href=\\\"https://pages.github.com/\\\">github pages</a>+<a href=\\\"https://jekyllrb.com/\\\">jekyll</a>, <a href=\\\"https://medium.com\\\">medium</a>, <a href=\\\"https://wordpress.com/\\\">가입형 wordpress</a> 들도 고려해보았지만,\\nReact의 생태계를 모두 사용할 수 있다는 말에 넘어가서 gatsby를 사용하기로 결정했다.  </p>\\n<h3>설치 과정</h3>\\n<ul>\\n<li>\\n<p>이 가이드는 <a href=\\\"https://github.com/alxshelepenok/gatsby-starter-lumen\\\">gatsby-starter-lumen</a>을 사용한다.</p>\\n</li>\\n<li>\\n<p>gatsby-cli 설치, starter를 이용해 블로그 프로젝트 생성(yarn 대신 npm을 사용해도 무관.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">mkdir</span> blog <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token builtin class-name\\\">cd</span> blog\\n<span class=\\\"token function\\\">yarn</span> global <span class=\\\"token function\\\">add</span> gatsby-cli\\ngatsby new kujyp https://github.com/alxshelepenok/gatsby-starter-lumen\\n<span class=\\\"token builtin class-name\\\">cd</span> kujyp</code></pre>\\n      </div>\\n</li>\\n<li>\\n<p>github pages 세팅</p>\\n<ul>\\n<li>username.github.io repo를 생성(<a href=\\\"https://github.com/kujyp/kujyp.github.io\\\">https://github.com/kujyp/kujyp.github.io</a>)</li>\\n<li>\\n<p>development branch에 stareter code를 push.(master는 build 결과물을 올려야한다.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">git</span> init\\n<span class=\\\"token function\\\">git</span> checkout -b development\\n<span class=\\\"token function\\\">git</span> <span class=\\\"token function\\\">add</span> <span class=\\\"token builtin class-name\\\">.</span>\\n<span class=\\\"token function\\\">git</span> commit -m <span class=\\\"token string\\\">\\\"init with starter\\\"</span>\\n<span class=\\\"token function\\\">git</span> remote <span class=\\\"token function\\\">add</span> origin https://github.com/kujyp/kujyp.github.io.git\\n<span class=\\\"token function\\\">git</span> push -u origin development</code></pre>\\n      </div>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>starter config 변경</p>\\n<ul>\\n<li>gatsby-config.js 에서 siteMetadata 를 수정한다.</li>\\n<li>disqusShortname 은 아래의 가이드대로 추가한다.</li>\\n<li>contact page 는 삭제했다.</li>\\n</ul>\\n</li>\\n<li>\\n<p>github pages 배포</p>\\n<ul>\\n<li>package.json 에서 deploy 명령어를 변경한다.<br/>\\n<code class=\\\"language-text\\\">gh-pages -d public -b master</code>\\n<img width=\\\"993\\\" alt=\\\"packagejson_deploy\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585875-de495400-7528-11e9-8467-3387420f1e64.png\\\"></li>\\n<li>\\n<p>deploy를 실행한다. 30초정도 소요된다.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">yarn</span> run deploy</code></pre>\\n      </div>\\n<img width=\\\"646\\\" alt=\\\"yarn_deploy\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585878-dee1ea80-7528-11e9-9585-bdb5982fffa1.png\\\">\\n<img width=\\\"663\\\" alt=\\\"yarn_deploy2\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585879-df7a8100-7528-11e9-8142-5b57ac0864ae.png\\\">\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>개발모드(hot reloading 기능이 지원되서 파일을 수정하면 localhost 페이지에 바로 반영된다.)</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">gatsby develop</code></pre>\\n      </div>\\n<img width=\\\"1390\\\" alt=\\\"develop\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585863-dd182700-7528-11e9-9055-151aac35fa6d.png\\\">\\n</li>\\n</ul>\\n<h3>disqus 추가하기</h3>\\n<ul>\\n<li>\\n<p><a href=\\\"https://disqus.com\\\">https://disqus.com</a> 에 접속해서 사이트를 추가한다. disqusShortname 을 받아와야한다.</p>\\n</li>\\n<li>\\n<p>get started 클릭\\n<img width=\\\"1131\\\" alt=\\\"disqus_getstarted_1\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585867-dd182700-7528-11e9-8ca8-33d0f2d03b62.png\\\"></p>\\n</li>\\n<li>\\n<p>I want to install Disqus on my site 클릭\\n<img width=\\\"571\\\" alt=\\\"disqus_install_2\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585868-ddb0bd80-7528-11e9-8fb7-e2b021f95fff.png\\\"></p>\\n</li>\\n<li>\\n<p>website name 입력, category 선택\\n<img width=\\\"767\\\" alt=\\\"disqus_create_3\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585865-dd182700-7528-11e9-92ff-4ee3d327e52f.png\\\"></p>\\n</li>\\n<li>\\n<p>basic plan 선택(무료)\\n<img width=\\\"936\\\" alt=\\\"disqus_setup_plan_4\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585870-ddb0bd80-7528-11e9-80d0-257b2a2973aa.png\\\"></p>\\n</li>\\n<li>\\n<p>지킬 등 site generator 어느 것 사용했냐고 물어보는데, 맨 하단 <code class=\\\"language-text\\\">I dont's see my platform ~</code> 선택\\n<img width=\\\"1093\\\" alt=\\\"disqus_setup_type_5\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585871-ddb0bd80-7528-11e9-9e44-0bd489a388ff.png\\\"></p>\\n</li>\\n<li>\\n<p>website URL 입력, Complete Setup 클릭\\n<img width=\\\"1108\\\" alt=\\\"disqus_setup_6\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585869-ddb0bd80-7528-11e9-9fd1-5fee68146b71.png\\\"></p>\\n</li>\\n<li>\\n<p>이제 사이트 추가는 완료되었다.<br/>\\nadmin 페이지에서 settings - general 선택, shortname을 받아온다. <br/>\\n위의 프로젝트에서 gatsby-config.js disqusShortname 필드를 수정해준다.\\n<img width=\\\"1085\\\" alt=\\\"disqus_site_general_shortname_7\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585872-de495400-7528-11e9-8172-2914a13b66dd.png\\\"></p>\\n</li>\\n<li>\\n<p>댓글기능 추가 완료\\n<img width=\\\"450\\\" alt=\\\"disqus_complete\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585864-dd182700-7528-11e9-895c-a96375a02878.png\\\"></p>\\n</li>\\n</ul>\\n<h3>글 posting</h3>\\n<p>이제 마지막으로 블로그 글을 포스팅하는 작업만 진행하면 된다.</p>\\n<ul>\\n<li>starter에 포함되어있는 형식대로 src/pages/articles 에 폴더를 하나 생성한다.</li>\\n<li>필요한 사진파일은 폴더내부에 같이 포함시켜준다.<br/>\\n(사용할때는 <code class=\\\"language-text\\\">![description](./filename)</code> 으로 사용하면된다.</li>\\n<li>markdown파일 맨 위에 frontmatter를 추가해준다.<br/>\\nstarter에 있는 형식그대로 가져와서 title, date, layout 등등을 추가해주었다.</li>\\n<li>아래에 글내용을 markdown 형식으로 작성하면 완성.<br>\\n<img width=\\\"918\\\" alt=\\\"posting\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585877-dee1ea80-7528-11e9-98ea-16c54f6f8131.png\\\"></li>\\n<li>글 작성은 <code class=\\\"language-text\\\">yarn run develop</code> 커맨드를 통해 localhost:8000 에서 결과물을 확인하면서 진행하였다.\\n<img width=\\\"1370\\\" alt=\\\"posting_develop\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585876-dee1ea80-7528-11e9-8e88-c7ef5a135b46.png\\\"></li>\\n<li>마지막으로 development branch에 수정내용을 commit, push해주고, master branch에 deploy를 진행한다.<br/>\\n<code class=\\\"language-text\\\">$ yarn run deploy</code>\\n<img width=\\\"663\\\" alt=\\\"yarn_deploy2\\\" src=\\\"https://user-images.githubusercontent.com/19223089/57585879-df7a8100-7528-11e9-8142-5b57ac0864ae.png\\\"></li>\\n</ul>\\n<h3>마치며</h3>\\n<p>gatsby를 활용하여, 인생 처음으로 기술블로그를 생성, 포스팅을 진행해보았다.<br/>\\n글쓰는게 생각보다… 쉽지않다.<br/>\\n1월 2일부터 쓰기시작해서 2일에 걸쳐 쓴것같은데, 다음글부터는 되도록 한호흡만에 글을 끝내도록 노력 해봐야겠다. 1편 2편으로 나눠야하나..</p>\\n<p>아 그리고 markdown 한줄만 띄우는방법을 몰라서<code class=\\\"language-text\\\">&lt;br/></code> 태그를 줄마다 붙이고있는데, 너무 불편하다.<br/>\\ngithub wiki에서도 이랬는데, github issue에서는 안그러고 완전 중구난방이다.(더 쉬운 방법 아시는분은 알려주세요…ㅜㅜ)</p>\\n<p>아무튼 이번글은 여기까지 마치고, 다음 글에서는 시간이 허락한다면 circleci를 활용해 deploy과정 자동화를 진행해봐야겠다.</p>\\n<h3>도움을 받았던 링크들</h3>\\n<ul>\\n<li><a href=\\\"https://adhrinae.github.io/posts/creating-new-blog-with-gatsby\\\">Gatsby를 활용한 블로그 재구성 - adhrinae님</a></li>\\n<li><a href=\\\"https://blog.shik.kr/migrate-to-gatsby/\\\">Jekyll에서 Gatsby로 - shik님</a></li>\\n<li><a href=\\\"https://heechan.me\\\">heechan님 블로그</a>(UI가 깔끔해서 이분이 사용한 starter를 사용했다.)</li>\\n</ul>\",\"fields\":{\"slug\":\"/posts/gatsby-starter-lumen으로-블로그-생성하기/\",\"tagSlugs\":[\"/tags/hosting/\",\"/tags/react/\",\"/tags/nodejs/\"]},\"frontmatter\":{\"title\":\"gatsby starter lumen으로 블로그 생성하기\",\"tags\":[\"hosting\",\"react\",\"nodejs\"],\"date\":\"2019-01-03T04:00:00.169Z\",\"description\":\"React를 사용하는 정적 페이지 생성 툴 gatsby를 활용해 개발블로그를 만들어 보았다. lumen starter를 활용해 css, plugin가 미리 세팅된 환경에서 작업을 시작했고, github pages를 이용해 생성된 정적페이지를 호스팅했다.\"}}},\"pathContext\":{\"slug\":\"/posts/gatsby-starter-lumen으로-블로그-생성하기/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-gatsby-starter-lumen으로-블로그-생성하기.json\n// module id = 422\n// module chunks = 114136929382123"],"sourceRoot":""}